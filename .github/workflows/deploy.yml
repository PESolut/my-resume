name: Deploy
run-name: ${{ github.actor }} is deploying the React app

on:
  push:
    branches: [ main ]
  workflow_run:
    workflows: ["Build-And-Test"]
    types:
      - completed

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.x'
      
      - name: Install dependencies
        working-directory: ./react-fe
        run: npm ci
      
      - name: Build React app
        working-directory: ./react-fe
        run: npm run build
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USER }}/portfolio-repo:latest

  deploy-to-ec2:
    needs: build-and-deploy
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER}@${HOST} '
            docker pull ${{ secrets.DOCKERHUB_USER }}/portfolio-repo:latest
            docker stop portfolio-container || true
            docker rm portfolio-container || true
            docker run -d --name portfolio-container -p 80:80 ${{ secrets.DOCKERHUB_USER }}/portfolio-repo:latest
          '
